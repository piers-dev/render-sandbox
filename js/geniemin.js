let particles=new Array,ribbonLength=0,swarmVelocity=0,swarmPosition=0;class particleTarget{constructor(t,e,i,s,n,a,r){this.x=t,this.y=e,this.size=i,this.lineWeight=s,this.coherence=n,this.snappiness=a,this.damping=r}}function circleFormation(t){let e=3.14159/particles.length*t;return ribbonLength=particles.length,swarmVelocity=-15,swarmPosition=5*stateTime-1,new particleTarget(150*Math.sin(e+5*stateTime),150*Math.cos(e+5*stateTime),20,0,1,.2,.5)}function VUFormation(t){let e=Math.floor(t/(particles.length/4)),i=t%(particles.length/4)-particles.length/8;return Math.abs(e-1.5)>1&&(i*=.4),ribbonLength=particles.length/4,new particleTarget(75*(e-1.5),10*i*inputAudio,30,0,1,.2+Math.max(Math.min(stateTime-.5,.7),0),.6)}function defaultFormation(t){let e=particles[t].startingX,i=particles[t].startingY,s=e*Math.cos(swarmPosition)-i*Math.sin(swarmPosition),n=i*Math.cos(swarmPosition)+e*Math.sin(swarmPosition),a=s,r=2*particles[t].randX,h=n,o=2*particles[t].randY;return a+=200*(noise(r,o+.05*time)-.5),h+=200*(noise(r+.05*time,o+.1*time)-.5),ribbonLength=particles.length,new particleTarget(a,h,particles[t].startingSize,1,0,.03,.8)}let stateTime,stateChangeTime,myCanvas,bgdiv,time,hwidth,hheight,inputAudio,form=0,lastForm=0;function formation(t,e){switch(e){case 0:return defaultFormation(t);case 1:return circleFormation(t);case 2:return VUFormation(t)}}class particle{constructor(t,e,i){this.x=t,this.y=e,this.xvel=0,this.yvel=0,this.lineWeight=1,this.coherence=0,this.startingX=t,this.startingY=e,this.randX=t,this.randY=e,this.state=0,this.size=i,this.startingSize=i,this.index=particles.length,particles.push(this)}draw(){fill("white");let t=formation(this.index,this.state);this.xvel+=(t.x-this.x)*t.snappiness,this.yvel+=(t.y-this.y)*t.snappiness,this.xvel*=t.damping,this.yvel*=t.damping,this.lineWeight=Math.max(lerp(this.lineWeight,t.lineWeight,.2),0),this.size=lerp(this.size,t.size,.05),this.coherence=lerp(this.coherence,t.coherence,t.coherence>this.coherence?.05:.6),this.x+=.5*this.xvel,this.y+=.5*this.yvel,this.lineWeight>.01&&particles.forEach((t=>{if(t.index>this.index){let e=Math.sqrt(Math.pow(this.x-t.x,2)+Math.pow(this.y-t.y,2));stroke(color(255,255,255,128)),strokeWeight(2*Math.max(1-e/100,0)*this.lineWeight),line(this.x+hwidth,this.y+hheight,t.x+hwidth,t.y+hheight)}})),stroke("white"),strokeWeight(this.size);let e=this;particles.length!=this.index+1&&(e=particles[this.index+1],e.index%ribbonLength<this.index%ribbonLength&&0!=ribbonLength&&(this.coherence=0)),line(this.x+hwidth,this.y+hheight,lerp(this.x,e.x,this.coherence)+hwidth,lerp(this.y,e.y,this.coherence)+hheight)}}function transformedCircle(t,e,i){circle(t+hwidth,e+hheight,i)}function drawParticles(){form!=lastForm&&(stateChangeTime=time),stateTime=time-stateChangeTime,lastForm=form,swarmVelocity*=.9,swarmPosition+=.01*swarmVelocity,particles[particles.length-1].state=form;let t=5;switch(form){case 0:t=8;break;case 1:t=4;break;case 2:t=20}for(let e=0;e<t;e++)for(let t=0;t<particles.length-1;t++)particles[t].state=particles[t+1].state;particles.forEach((t=>{t.draw()}))}function bias(t,e){return e=-Math.log2(1-e),1-Math.pow(1-Math.pow(t,1/e),e)}function initParticles(){for(let t=0;t<64;t++){let e=4*Math.PI/32*t+.75*Math.PI,i=150*Math.cos(e),s=150*Math.sin(e);i+=100*(Math.random()-.5),s+=100*(Math.random()-.5),new particle(i,s,pow(10*bias(Math.random(),.3)+2,1.5))}}function getWidth(){return 800}function getHeight(){return 800}function setup(){bgdiv=document.getElementById("canvas"),myCanvas=createCanvas(getWidth(),getHeight()),myCanvas.parent("canvas");let t=createButton("Default");t.position(0,0),t.mousePressed((()=>{form=0}));let e=createButton("Loading");e.position(100,0),e.mousePressed((()=>{form=1}));let i=createButton("VU Meter");i.position(200,0),i.mousePressed((()=>{form=2})),initParticles(),readMicrophone()}function readMicrophone(){navigator.mediaDevices.getUserMedia({audio:!0,video:!0}).then((function(t){const e=new AudioContext,i=e.createAnalyser(),s=e.createMediaStreamSource(t),n=e.createScriptProcessor(2048,1,1);i.smoothingTimeConstant=.8,i.fftSize=1024,s.connect(i),i.connect(n),n.connect(e.destination),n.onaudioprocess=function(){const t=new Uint8Array(i.frequencyBinCount);i.getByteFrequencyData(t);let e=t.reduce(((t,e)=>t+e),0)/t.length;e=1.17*Math.max(e-15,0);let s=1.5*bias(e/100,.75);isNaN(s)||(inputAudio=s)}})).catch((function(t){console.error(t)}))}function draw(){time=Date.now()/1e3,hwidth=width/2,hheight=height/2,clear(),drawParticles()}